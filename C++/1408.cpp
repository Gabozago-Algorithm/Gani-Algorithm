// [1408] 24

/*
도현이는 Counter Terror Unit (CTU)에서 일하는 특수요원
도현이는 모든 사건을 정확하게 24시간이 되는 순간 해결
도현이는 1시간 만에 범인을 잡을 수 있어도 잡지 않는다
정확하게 24시간이 되는 순간이 아니면 잡지 않는 CTU 특수요원

2008년 3월 3일 월요일, CTU는 새학기에 맞춰 핵폭탄을 날리겠다는 테러 정보를 입수
CTU의 프로그래머 준규는 이 사건의 배후가 김선영이란 것을 해킹을 통해 밝혀냄
도현이는 선영이를 임무를 시작한지 정확하게 24시간이 되는 순간에 잡으려고 한다

만약 지금 시간이 13:52:30이고, 임무를 시작한 시간이 14:00:00 이라면 도현이에게 남은시간은 00:07:30
모든 시간은 00:00:00 ~ 23:59:59로 표현
입력과 출력에 주어지는 모든 시간은 XX:XX:XX 형태
숫자가 2자리가 아닐 경우에는 0으로 채운다

도현이가 임무를 시작한 시간과, 현재 시간이 주어졌을 때, 
도현이에게 남은 시간을 구하는 프로그램을 작성

입력
첫째 줄에는 현재 시간이, 둘째 줄에는 도현이가 임무를 시작한 시간
임무를 시작한 시간과 현재 시간이 같은 경우는 주어지지 않는다.

출력
첫째 줄에 도현이가 임무를 수행하는데 남은 시간을 
문제에서 주어지는 시간의 형태 (XX:XX:XX)에 맞춰 출력
*/

#define _CRT_SECURE_NO_WARNINGS
// 표준 스트림에서 읽기 및 쓰기를 제어하는 개체를 선언
#include <iostream>
// 두 개체를 하나인 것처럼 처리해야 할 때 개체 쌍을 생성 및 관리
#include <utility>
// 알고리즘을 수행하는 C++ 표준 라이브러리 컨테이너 템플릿 함수를 정의
#include <algorithm>
// 다양한 형식의 개체가 포함된 tuple 템플릿을 정의
#include <tuple>
// vector는 선형 시퀀스에서 지정된 유형의 요소를 구성하는 컨테이너
#include <vector>
// 연결된 이름을 네임스페이스에 std 추가
#include <string>
// 할당된 배열 개체에 저장된 시퀀스에 대한 iostreams 작업을 지원하는 여러 클래스 템플릿 정의
#include <sstream>
using namespace std;

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int h, m, s;
	int h2, m2, s2;

	// 주어지는 시간의 형태 (XX:XX:XX)
	scanf("%d:%d:%d", &h, &m, &s);		// 현재시간
	scanf("%d:%d:%d", &h2, &m2, &s2);	// 임무시작시간

	h2 -= h;
	m2 -= m;
	s2 -= s;

	if (s2 < 0) {
		s2 += 60;
		m2 -= 1;
	}
	if (m2 < 0) {
		m2 += 60;
		h2 -= 1;
	}
	if (h2 < 0) {
		h2 += 24;
	}
	
	//%02d : 2자리보다 작을때 빈자리에 0을 추가
	printf("%02d:%02d:%02d", h2, m2, s2);
	return 0;
}