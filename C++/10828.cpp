// [10828] 스택

/*
정수를 저장하는 스택을 구현한 다음,
입력으로 주어지는 명령을 처리하는 프로그램을 작성하시오.

명령은 총 다섯 가지이다.

push X: 정수 X를 스택에 넣는 연산이다.
pop: 스택에서 가장 위에 있는 정수를 빼고, 그 수를 출력한다. 
만약 스택에 들어있는 정수가 없는 경우에는 -1을 출력한다.
size: 스택에 들어있는 정수의 개수를 출력한다.
empty: 스택이 비어있으면 1, 아니면 0을 출력한다.
top: 스택의 가장 위에 있는 정수를 출력한다. 
만약 스택에 들어있는 정수가 없는 경우에는 -1을 출력한다.

입력
첫째 줄에 주어지는 명령의 수 N (1 ≤ N ≤ 10,000)이 주어진다. 
둘째 줄부터 N개의 줄에는 명령이 하나씩 주어진다. 
주어지는 정수는 1보다 크거나 같고, 100,000보다 작거나 같다.
문제에 나와있지 않은 명령이 주어지는 경우는 없다

출력
출력해야하는 명령이 주어질 때마다, 한 줄에 하나씩 출력한다.
*/

#define _CRT_SECURE_NO_WARNINGS
// 표준 스트림에서 읽기 및 쓰기를 제어하는 개체를 선언
#include <iostream>
#include <algorithm>    // find
#include <string>
#include <cmath>        // abs
#include <vector>
using namespace std;

// 스택 클래스 생성
class Stack {
public:
	int stack[10000]; // 스택을 하나의 배열
	// size: 스택에 들어있는 정수의 개수를 출력한다.
	int size;

	Stack() { size = 0; }

	// push X : 정수 X를 스택에 넣는 연산이다.
	void push(int data) {
		stack[size] = data;
		size += 1;
	}

	// empty: 스택이 비어있으면 1, 아니면 0을 출력한다.
	bool empty() {
		if (size == 0)
		{
			return true;
		}
		else
		{
			return false;
		}
	}

	// pop: 스택에서 가장 위에 있는 정수를 빼고, 그 수를 출력한다.
	// 만약 스택에 들어있는 정수가 없는 경우에는 - 1을 출력한다.
	int pop() {
		if (empty())
		{
			return -1;
		}
		else
		{
			stack[size - 1] = 0;
			size -= 1;
			return stack[size];
		}
	}

	// top : 스택의 가장 위에 있는 정수를 출력한다.
	// 만약 스택에 들어있는 정수가 없는 경우에는 - 1을 출력한다.
	int top() {
		if (empty())
		{
			return -1;
		}
		else
		{
			return stack[size - 1];
		}
	}
};

int main() {
	// 주어지는 명령의 수 N
	int N;
	cin >> N;

	Stack st;

	for (int i = 0; i < N; i++)
	{
		string cmd;
		// push, pop, empty, size, top 중 입력받음
		cin >> cmd; 

		if (cmd == "push")
		{
			int data;
			cin >> data;
			st.push(data);
		}
		else if (cmd == "pop")
		{
			// 스택에 들어있는 정수가 없는 경우에는 -1
			cout << (st.empty() ? -1 : st.top()) << '\n';
			if (!st.empty())
			{
				st.pop();
			}
		}
		else if (cmd == "size")
		{
			cout << st.size << '\n';
		}
		else if (cmd == "empty")
		{
			cout << st.empty() << '\n';
		}
		else if (cmd == "top")
		{
			cout << st.top() << '\n';
		}
	}

	return 0;
}